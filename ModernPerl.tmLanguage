<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<!--
This file was generated automatically by parseplist.pl from ModernPerl.tmLanguage.yaml.ep.
Do not edit this file directly. Instead, use parseplist.pl to generate it.
-->
<plist version="1.0">
	<dict>
		<key>comment</key>
		<string>Blaise Roth &lt;blaizer@cpan.org&gt;</string>
		<key>fileTypes</key>
		<array>
			<string>pl</string>
			<string>PL</string>
			<string>pm</string>
			<string>pod</string>
			<string>t</string>
		</array>
		<key>firstLineMatch</key>
		<string>^#!.*\bperl\b</string>
		<key>name</key>
		<string>ModernPerl</string>
		<key>patterns</key>
		<array>
			<dict>
				<key>include</key>
				<string>#line_comment</string>
			</dict>
			<dict>
				<key>include</key>
				<string>#pod</string>
			</dict>
			<dict>
				<key>include</key>
				<string>#variable</string>
			</dict>
			<dict>
				<key>begin</key>
				<string>\b(?=qr\s*[^\s\w])</string>
				<key>end</key>
				<string>((([\p{Lower}]*)))(?=(\s+\S|\s*[;\,\#\{\}\)]|$))</string>
				<key>endCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>string.regexp.compile.perl</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.perl</string>
					</dict>
					<key>3</key>
					<dict>
						<key>name</key>
						<string>keyword.control.regexp-option.perl</string>
					</dict>
				</dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>begin</key>
						<string>(qr)\s*\{</string>
						<key>captures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.string.perl</string>
							</dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>support.function.perl</string>
							</dict>
						</dict>
						<key>end</key>
						<string>\}</string>
						<key>name</key>
						<string>string.regexp.compile.nested_braces.perl</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#escaped_char</string>
							</dict>
							<dict>
								<key>include</key>
								<string>#variable</string>
							</dict>
							<dict>
								<key>include</key>
								<string>#nested_braces_interpolated</string>
							</dict>
						</array>
					</dict>
					<dict>
						<key>begin</key>
						<string>(qr)\s*\[</string>
						<key>captures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.string.perl</string>
							</dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>support.function.perl</string>
							</dict>
						</dict>
						<key>end</key>
						<string>]</string>
						<key>name</key>
						<string>string.regexp.compile.nested_brackets.perl</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#escaped_char</string>
							</dict>
							<dict>
								<key>include</key>
								<string>#variable</string>
							</dict>
							<dict>
								<key>include</key>
								<string>#nested_brackets_interpolated</string>
							</dict>
						</array>
					</dict>
					<dict>
						<key>begin</key>
						<string>(qr)\s*&lt;</string>
						<key>captures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.string.perl</string>
							</dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>support.function.perl</string>
							</dict>
						</dict>
						<key>end</key>
						<string>&gt;</string>
						<key>name</key>
						<string>string.regexp.compile.nested_ltgt.perl</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#escaped_char</string>
							</dict>
							<dict>
								<key>include</key>
								<string>#variable</string>
							</dict>
							<dict>
								<key>include</key>
								<string>#nested_ltgt_interpolated</string>
							</dict>
						</array>
					</dict>
					<dict>
						<key>begin</key>
						<string>(qr)\s*\(</string>
						<key>captures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.string.perl</string>
							</dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>support.function.perl</string>
							</dict>
						</dict>
						<key>end</key>
						<string>\)</string>
						<key>name</key>
						<string>string.regexp.compile.nested_parens.perl</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#escaped_char</string>
							</dict>
							<dict>
								<key>include</key>
								<string>#variable</string>
							</dict>
							<dict>
								<key>include</key>
								<string>#nested_parens_interpolated</string>
							</dict>
						</array>
					</dict>
					<dict>
						<key>begin</key>
						<string>(qr)\s*\'</string>
						<key>captures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.string.perl</string>
							</dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>support.function.perl</string>
							</dict>
						</dict>
						<key>end</key>
						<string>'</string>
						<key>name</key>
						<string>string.regexp.compile.single-quote.perl</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#escaped_char</string>
							</dict>
						</array>
					</dict>
					<dict>
						<key>begin</key>
						<string>(qr)\s*([^\s\w\'\{\[\(\&lt;])</string>
						<key>captures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.string.perl</string>
							</dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>support.function.perl</string>
							</dict>
						</dict>
						<key>end</key>
						<string>\2</string>
						<key>name</key>
						<string>string.regexp.compile.simple-delimiter.perl</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>comment</key>
								<string>This is to prevent thinks like qr/foo$/ to treat $/ as a variable</string>
								<key>match</key>
								<string>\$(?=[^\s\w\'\{\[\(\&lt;])</string>
								<key>name</key>
								<string>keyword.control.anchor.perl</string>
							</dict>
							<dict>
								<key>include</key>
								<string>#escaped_char</string>
							</dict>
							<dict>
								<key>include</key>
								<string>#variable</string>
							</dict>
							<dict>
								<key>include</key>
								<string>#nested_parens_interpolated</string>
							</dict>
						</array>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>\b(?=(?&lt;!\&amp;)(s)(\s+\S|\s*[;\,\#\{\}\(\)\[&lt;]|$))</string>
				<key>end</key>
				<string>((([\p{Lower}]*)))(?=(\s+\S|\s*[;\,\#\{\}\)\]&gt;]|$))</string>
				<key>endCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>string.regexp.replace.perl</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.perl</string>
					</dict>
					<key>3</key>
					<dict>
						<key>name</key>
						<string>keyword.control.regexp-option.perl</string>
					</dict>
				</dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>begin</key>
						<string>(s)\s*\{</string>
						<key>captures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.string.perl</string>
							</dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>support.function.perl</string>
							</dict>
						</dict>
						<key>end</key>
						<string>\}</string>
						<key>name</key>
						<string>string.regexp.nested_braces.perl</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#escaped_char</string>
							</dict>
							<dict>
								<key>include</key>
								<string>#nested_braces</string>
							</dict>
						</array>
					</dict>
					<dict>
						<key>begin</key>
						<string>(s)\s*\[</string>
						<key>captures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.string.perl</string>
							</dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>support.function.perl</string>
							</dict>
						</dict>
						<key>end</key>
						<string>]</string>
						<key>name</key>
						<string>string.regexp.nested_brackets.perl</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#escaped_char</string>
							</dict>
							<dict>
								<key>include</key>
								<string>#nested_brackets</string>
							</dict>
						</array>
					</dict>
					<dict>
						<key>begin</key>
						<string>(s)\s*&lt;</string>
						<key>captures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.string.perl</string>
							</dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>support.function.perl</string>
							</dict>
						</dict>
						<key>end</key>
						<string>&gt;</string>
						<key>name</key>
						<string>string.regexp.nested_ltgt.perl</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#escaped_char</string>
							</dict>
							<dict>
								<key>include</key>
								<string>#nested_ltgt</string>
							</dict>
						</array>
					</dict>
					<dict>
						<key>begin</key>
						<string>(s)\s*\(</string>
						<key>captures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.string.perl</string>
							</dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>support.function.perl</string>
							</dict>
						</dict>
						<key>end</key>
						<string>\)</string>
						<key>name</key>
						<string>string.regexp.nested_parens.perl</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#escaped_char</string>
							</dict>
							<dict>
								<key>include</key>
								<string>#nested_parens</string>
							</dict>
						</array>
					</dict>
					<dict>
						<key>begin</key>
						<string>\{</string>
						<key>captures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.string.perl</string>
							</dict>
						</dict>
						<key>end</key>
						<string>\}</string>
						<key>name</key>
						<string>string.regexp.format.nested_braces.perl</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#escaped_char</string>
							</dict>
							<dict>
								<key>include</key>
								<string>#variable</string>
							</dict>
							<dict>
								<key>include</key>
								<string>#nested_braces_interpolated</string>
							</dict>
						</array>
					</dict>
					<dict>
						<key>begin</key>
						<string>\[</string>
						<key>captures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.string.perl</string>
							</dict>
						</dict>
						<key>end</key>
						<string>]</string>
						<key>name</key>
						<string>string.regexp.format.nested_brackets.perl</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#escaped_char</string>
							</dict>
							<dict>
								<key>include</key>
								<string>#variable</string>
							</dict>
							<dict>
								<key>include</key>
								<string>#nested_brackets_interpolated</string>
							</dict>
						</array>
					</dict>
					<dict>
						<key>begin</key>
						<string>&lt;</string>
						<key>captures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.string.perl</string>
							</dict>
						</dict>
						<key>end</key>
						<string>&gt;</string>
						<key>name</key>
						<string>string.regexp.format.nested_ltgt.perl</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#escaped_char</string>
							</dict>
							<dict>
								<key>include</key>
								<string>#variable</string>
							</dict>
							<dict>
								<key>include</key>
								<string>#nested_ltgt_interpolated</string>
							</dict>
						</array>
					</dict>
					<dict>
						<key>begin</key>
						<string>\(</string>
						<key>captures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.string.perl</string>
							</dict>
						</dict>
						<key>end</key>
						<string>\)</string>
						<key>name</key>
						<string>string.regexp.format.nested_parens.perl</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#escaped_char</string>
							</dict>
							<dict>
								<key>include</key>
								<string>#variable</string>
							</dict>
							<dict>
								<key>include</key>
								<string>#nested_parens_interpolated</string>
							</dict>
						</array>
					</dict>
					<dict>
						<key>begin</key>
						<string>'</string>
						<key>captures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.string.perl</string>
							</dict>
						</dict>
						<key>end</key>
						<string>'</string>
						<key>name</key>
						<string>string.regexp.format.single_quote.perl</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>match</key>
								<string>\\['\\]</string>
								<key>name</key>
								<string>constant.character.escape.perl</string>
							</dict>
						</array>
					</dict>
					<dict>
						<key>begin</key>
						<string>([^\s\w\[({&lt;;])</string>
						<key>captures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.string.perl</string>
							</dict>
						</dict>
						<key>end</key>
						<string>\1</string>
						<key>name</key>
						<string>string.regexp.format.simple_delimiter.perl</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#escaped_char</string>
							</dict>
							<dict>
								<key>include</key>
								<string>#variable</string>
							</dict>
						</array>
					</dict>
					<dict>
						<key>match</key>
						<string>\s+</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>\b(?=s([^\s\w\[({&lt;]).*\1([\p{Lower}]*)([\}\)\;\,]|\s+))</string>
				<key>comment</key>
				<string>string.regexp.replaceXXX</string>
				<key>end</key>
				<string>((([\p{Lower}]*)))(?=([\}\)\;\,]|\s+|$))</string>
				<key>endCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>string.regexp.replace.perl</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.perl</string>
					</dict>
					<key>3</key>
					<dict>
						<key>name</key>
						<string>keyword.control.regexp-option.perl</string>
					</dict>
				</dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>begin</key>
						<string>(s\s*)([^\s\w\[({&lt;])</string>
						<key>captures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.string.perl</string>
							</dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>support.function.perl</string>
							</dict>
						</dict>
						<key>end</key>
						<string>(?=\2)</string>
						<key>name</key>
						<string>string.regexp.replaceXXX.simple_delimiter.perl</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#escaped_char</string>
							</dict>
						</array>
					</dict>
					<dict>
						<key>begin</key>
						<string>'</string>
						<key>captures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.string.perl</string>
							</dict>
						</dict>
						<key>end</key>
						<string>'</string>
						<key>name</key>
						<string>string.regexp.replaceXXX.format.single_quote.perl</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>match</key>
								<string>\\['\\]</string>
								<key>name</key>
								<string>constant.character.escape.perl.perl</string>
							</dict>
						</array>
					</dict>
					<dict>
						<key>begin</key>
						<string>([^\s\w\[({&lt;])</string>
						<key>captures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.string.perl</string>
							</dict>
						</dict>
						<key>end</key>
						<string>\1</string>
						<key>name</key>
						<string>string.regexp.replaceXXX.format.simple_delimiter.perl</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#escaped_char</string>
							</dict>
							<dict>
								<key>include</key>
								<string>#variable</string>
							</dict>
						</array>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>\b(?=(?&lt;!\\)s\s*([^\s\w\[({&lt;]))</string>
				<key>comment</key>
				<string>string.regexp.replace.extended</string>
				<key>end</key>
				<string>\2((([\p{Lower}]*x[\p{Lower}]*)))\b</string>
				<key>endCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>string.regexp.replace.perl</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.perl</string>
					</dict>
					<key>3</key>
					<dict>
						<key>name</key>
						<string>keyword.control.regexp-option.perl</string>
					</dict>
				</dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>begin</key>
						<string>(s)\s*(.)</string>
						<key>captures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.string.perl</string>
							</dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>support.function.perl</string>
							</dict>
						</dict>
						<key>end</key>
						<string>(?=\2)</string>
						<key>name</key>
						<string>string.regexp.replace.extended.simple_delimiter.perl</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#escaped_char</string>
							</dict>
						</array>
					</dict>
					<dict>
						<key>begin</key>
						<string>'</string>
						<key>captures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.string.perl</string>
							</dict>
						</dict>
						<key>end</key>
						<string>'(?=[\p{Lower}]*x[\p{Lower}]*)\b</string>
						<key>name</key>
						<string>string.regexp.replace.extended.simple_delimiter.perl</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#escaped_char</string>
							</dict>
						</array>
					</dict>
					<dict>
						<key>begin</key>
						<string>(.)</string>
						<key>captures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.string.perl</string>
							</dict>
						</dict>
						<key>end</key>
						<string>\1(?=[\p{Lower}]*x[\p{Lower}]*)\b</string>
						<key>name</key>
						<string>string.regexp.replace.extended.simple_delimiter.perl</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#escaped_char</string>
							</dict>
							<dict>
								<key>include</key>
								<string>#variable</string>
							</dict>
						</array>
					</dict>
				</array>
			</dict>
			<dict>
				<key>match</key>
				<string>(?:\b|-)[\w&amp;&amp;\D]\w*\s*(?==&gt;)</string>
				<key>name</key>
				<string>constant.language.string.perl</string>
			</dict>
			<dict>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>constant.language.string.perl</string>
					</dict>
				</dict>
				<key>match</key>
				<string><![CDATA[(?x)
				{
				(?! \s+ -?[\w&&\D]\w* \s+) # can't have spaces on both sides
				(\s*-?[\w&&\D]\w*\s*)
				}
				]]></string>
				<key>name</key>
				<string>meta.bareword.braced.perl</string>
			</dict>
			<dict>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.perl</string>
					</dict>
					<key>5</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.perl</string>
					</dict>
				</dict>
				<key>match</key>
				<string>(?&lt;!\\)((~\s*)?\/)(\S.*?)(?&lt;!\\)(\\{2})*(\/)</string>
				<key>name</key>
				<string>string.regexp.find.perl</string>
			</dict>
			<dict>
				<key>begin</key>
				<string>(?&lt;!\\)(\~\s*\/)</string>
				<key>captures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.perl</string>
					</dict>
				</dict>
				<key>end</key>
				<string>\/([\p{Lower}]*x[\p{Lower}]*)\b</string>
				<key>endCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>keyword.control.regexp-option.perl</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.regexp.find.extended.perl</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#escaped_char</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#variable</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>include</key>
				<string>#ampersand_sub</string>
			</dict>
			<dict>
				<key>include</key>
				<string>#other_sigil</string>
			</dict>
			<dict>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>support.function.perl</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.perl</string>
					</dict>
					<key>5</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.perl</string>
					</dict>
				</dict>
				<key>match</key>
				<string>\b(m)\s*(?&lt;!\\)([^\[\{\(\w\s])(.*?)(?&lt;!\\)(\\{2})*(\2)</string>
				<key>name</key>
				<string>string.regexp.find-m.perl</string>
			</dict>
			<dict>
				<key>begin</key>
				<string>\b(m)\s*(?&lt;!\\)\(</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.perl</string>
					</dict>
				</dict>
				<key>end</key>
				<string>\)</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.perl</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.regexp.find-m-paren.perl</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#escaped_char</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#nested_parens_interpolated</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#variable</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>\b(m)\s*(?&lt;!\\)\{</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.perl</string>
					</dict>
				</dict>
				<key>end</key>
				<string>\}</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.perl</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.regexp.find-m-brace.perl</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#escaped_char</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#nested_braces_interpolated</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#variable</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>\b(m)\s*(?&lt;!\\)\[</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.perl</string>
					</dict>
				</dict>
				<key>end</key>
				<string>]</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.perl</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.regexp.find-m-bracket.perl</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#escaped_char</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#nested_brackets_interpolated</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#variable</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>\b(m)\s*(?&lt;!\\)\&lt;</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.perl</string>
					</dict>
				</dict>
				<key>end</key>
				<string>&gt;</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.perl</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.regexp.find-m-ltgt.perl</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#escaped_char</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#nested_ltgt_interpolated</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#variable</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>support.function.perl</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.perl</string>
					</dict>
					<key>5</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.perl</string>
					</dict>
					<key>8</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.perl</string>
					</dict>
				</dict>
				<key>match</key>
				<string>\b(s|tr|y)\s*([^\w\s])(.*?)(?&lt;!\\)(\\{2})*(\2)(.*?)(?&lt;!\\)(\\{2})*(\2)</string>
				<key>name</key>
				<string>string.regexp.replace.perl</string>
			</dict>
			<dict>
				<key>match</key>
				<string>\b(__FILE__|__LINE__|__PACKAGE__|__SUB__)(?!\w|::)</string>
				<key>name</key>
				<string>constant.language.compiler-token.perl</string>
			</dict>
			<dict>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>keyword.control.labelled.perl</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>constant.language.label.perl</string>
					</dict>
				</dict>
				<key>match</key>
				<string><![CDATA[(?x)
				\b (dump|goto|last|next|redo) (?!\w|::)
				#
				(?:
					# open parens or space
					(?: \s+ | \s*(?: \(\s* )+ )
					#
					# LABEL
					([\w&&\D&&\P{Lower}][\w&&\P{Lower}]*) (?!\w|::|'\w)
				)?
				]]></string>
				<key>name</key>
				<string>meta.control.labelled.perl</string>
			</dict>
			<dict>
				<key>match</key>
				<string>\b(break|continue|default|die|do|dump|else|elsif|eval|exit|for|foreach|given|goto|if|last|next|redo|return|unless|until|when|while)(?!\w|::)</string>
				<key>name</key>
				<string>keyword.control.perl</string>
			</dict>
			<dict>
				<key>captures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>variable.parameter.type.perl</string>
					</dict>
				</dict>
				<key>match</key>
				<string>\b(local|my|our|state)(?!\w|::)</string>
				<key>name</key>
				<string>keyword.function.type.perl</string>
			</dict>
			<dict>
				<key>match</key>
				<string>\b(and|cmp|or|xor|not|lt|gt|le|ge|eq|ne|x)(?!\w|::)</string>
				<key>name</key>
				<string>keyword.operator.boolean.named.perl</string>
			</dict>
			<dict>
				<key>begin</key>
				<string>((&lt;&lt;) *"([^"]*)").*\n?</string>
				<key>captures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.perl</string>
					</dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>string.unquoted.heredoc.doublequote.perl</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.heredoc.perl</string>
					</dict>
				</dict>
				<key>contentName</key>
				<string>string.unquoted.heredoc.doublequote.perl</string>
				<key>end</key>
				<string>(^\3$)</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#escaped_char</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#variable</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>((&lt;&lt;) *'([^']*)').*\n?</string>
				<key>captures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.perl</string>
					</dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>string.unquoted.heredoc.quote.perl</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.heredoc.perl</string>
					</dict>
				</dict>
				<key>contentName</key>
				<string>string.unquoted.heredoc.quote.perl</string>
				<key>end</key>
				<string>(^\3$)</string>
			</dict>
			<dict>
				<key>begin</key>
				<string>((&lt;&lt;) *`([^`]*)`).*\n?</string>
				<key>captures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.perl</string>
					</dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>string.unquoted.heredoc.backtick.perl</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.heredoc.perl</string>
					</dict>
				</dict>
				<key>contentName</key>
				<string>string.unquoted.heredoc.backtick.perl</string>
				<key>end</key>
				<string>(^\3$)</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#escaped_char</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#variable</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>((&lt;&lt;) *((?![=\d\$ ])[^;,'"`\s)]*)).*\n?</string>
				<key>captures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.perl</string>
					</dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>string.unquoted.heredoc.perl</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.heredoc.perl</string>
					</dict>
				</dict>
				<key>contentName</key>
				<string>string.unquoted.heredoc.perl</string>
				<key>end</key>
				<string>(^\3$)</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#escaped_char</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#variable</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>\bqq\s*([^\(\{\[\&lt;\w\s])</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.perl</string>
					</dict>
				</dict>
				<key>end</key>
				<string>\1</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.perl</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.quoted.other.qq.perl</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#escaped_char</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#variable</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>\bqx\s*([^'\(\{\[\&lt;\w\s])</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.perl</string>
					</dict>
				</dict>
				<key>end</key>
				<string>\1</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.perl</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.interpolated.qx.perl</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#escaped_char</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#variable</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>\bqx\s*'</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.perl</string>
					</dict>
				</dict>
				<key>end</key>
				<string>'</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.perl</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.interpolated.qx.single-quote.perl</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#escaped_char</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>"</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.perl</string>
					</dict>
				</dict>
				<key>end</key>
				<string>"</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.perl</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.quoted.double.perl</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#escaped_char</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#variable</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>\bqw?\s*([^\(\{\[\&lt;\w\s])</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.perl</string>
					</dict>
				</dict>
				<key>end</key>
				<string>\1</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.perl</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.quoted.other.q.perl</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#escaped_char</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>(')</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.perl</string>
					</dict>
				</dict>
				<key>end</key>
				<string>\1</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.perl</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.quoted.single.perl</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>match</key>
						<string>\\['\\]</string>
						<key>name</key>
						<string>constant.character.escape.perl</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>`</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.perl</string>
					</dict>
				</dict>
				<key>end</key>
				<string>`</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.perl</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.interpolated.perl</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#escaped_char</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#variable</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>\bqq\s*\(</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.perl</string>
					</dict>
				</dict>
				<key>end</key>
				<string>\)</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.perl</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.quoted.other.qq-paren.perl</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#escaped_char</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#nested_parens_interpolated</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#variable</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>\bqq\s*\{</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.perl</string>
					</dict>
				</dict>
				<key>end</key>
				<string>\}</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.perl</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.quoted.other.qq-brace.perl</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#escaped_char</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#nested_braces_interpolated</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#variable</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>\bqq\s*\[</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.perl</string>
					</dict>
				</dict>
				<key>end</key>
				<string>]</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.perl</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.quoted.other.qq-bracket.perl</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#escaped_char</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#nested_brackets_interpolated</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#variable</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>\bqq\s*\&lt;</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.perl</string>
					</dict>
				</dict>
				<key>end</key>
				<string>&gt;</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.perl</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.quoted.other.qq-ltgt.perl</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#escaped_char</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#nested_ltgt_interpolated</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#variable</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>\bqx\s*\(</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.perl</string>
					</dict>
				</dict>
				<key>end</key>
				<string>\)</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.perl</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.interpolated.qx-paren.perl</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#escaped_char</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#nested_parens_interpolated</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#variable</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>\bqx\s*\{</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.perl</string>
					</dict>
				</dict>
				<key>end</key>
				<string>\}</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.perl</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.interpolated.qx-brace.perl</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#escaped_char</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#nested_braces_interpolated</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#variable</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>\bqx\s*\[</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.perl</string>
					</dict>
				</dict>
				<key>end</key>
				<string>]</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.perl</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.interpolated.qx-bracket.perl</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#escaped_char</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#nested_brackets_interpolated</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#variable</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>\bqx\s*\&lt;</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.perl</string>
					</dict>
				</dict>
				<key>end</key>
				<string>&gt;</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.perl</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.interpolated.qx-ltgt.perl</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#escaped_char</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#nested_ltgt_interpolated</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#variable</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>\bqw?\s*\(</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.perl</string>
					</dict>
				</dict>
				<key>end</key>
				<string>\)</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.perl</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.quoted.other.q-paren.perl</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#escaped_char</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#nested_parens</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>\bqw?\s*\{</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.perl</string>
					</dict>
				</dict>
				<key>end</key>
				<string>\}</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.perl</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.quoted.other.q-brace.perl</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#escaped_char</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#nested_braces</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>\bqw?\s*\[</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.perl</string>
					</dict>
				</dict>
				<key>end</key>
				<string>]</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.perl</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.quoted.other.q-bracket.perl</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#escaped_char</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#nested_brackets</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>\bqw?\s*\&lt;</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.perl</string>
					</dict>
				</dict>
				<key>end</key>
				<string>&gt;</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.perl</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.quoted.other.q-ltgt.perl</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#escaped_char</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#nested_ltgt</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>\b(__END__|__DATA__)(?!\w|::)</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>comment.block.arbitrary.start</string>
					</dict>
				</dict>
				<key>end</key>
				<string>(?!^)^</string>
				<key>name</key>
				<string>comment.block.aribtrary.perl</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#pod</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>match</key>
				<string><![CDATA[(?x)
				(?<! [<])
				<
				(?! [\s=] )
				(?> (?:
					\s* (?: [^<>=$\s\\]+ | (?:\\.)+ | [=$]+ (?! [>]) )
				)* )
				>
				(?! [>=])
				]]></string>
				<key>name</key>
				<string>string.quoted.angle.perl</string>
			</dict>
			<dict>
				<key>begin</key>
				<string><![CDATA[(?x)
				\b (format)
				#
				# format picture - copied from variable
				(?: \s+ ((?:(?:::)+|[\w&&\D])\w*(?:(?:::|'[\w&&\D])\w*)*) )?
				#
				\s* = \s* $
				]]></string>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>keyword.operator.format.perl</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>constant.language.filehandle.picture.perl</string>
					</dict>
				</dict>
				<key>contentName</key>
				<string>string.unquoted.format.perl</string>
				<key>end</key>
				<string>^\.\s*$</string>
				<key>name</key>
				<string>meta.format.perl</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#line_comment</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#variable</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>keyword.operator.format.perl</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>constant.language.filehandle.picture.perl</string>
					</dict>
				</dict>
				<key>match</key>
				<string><![CDATA[(?x)
				# this pattern will match until the begin/end pattern above matches
				# so that format PICTURE highlights before you put the = in
				#
				\b (format)
				#
				(?:
					\s+
					# format picture - copied from variable
					((?:(?:::)+|[\w&&\D])\w*(?:(?:::|'[\w&&\D])\w*)*)
					\s* $
				)?
				]]></string>
			</dict>
			<dict>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>keyword.control.package.perl</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>constant.language.package.perl</string>
					</dict>
				</dict>
				<key>match</key>
				<string><![CDATA[(?x)
				\b (
					# autoquoting keywords
					(?:package|use|require|no)
					(?!\w|::)
				)
				#
				(?:\s+(
					# not a version number
					(?!(v\d+(?:\.\d+)*)(?!\w|::))
					#
					# package name - copied from variable
					(?:(?:::)+|[\w&&\D])\w*(?:(?:::|'[\w&&\D])\w*)*
					(?!\w|::)
				))?
				]]></string>
				<key>name</key>
				<string>meta.class.perl</string>
			</dict>
			<dict>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>keyword.control.sub.perl</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>support.function.control.non-standard-sub.perl</string>
					</dict>
					<key>3</key>
					<dict>
						<key>name</key>
						<string>entity.name.function.perl</string>
					</dict>
					<key>4</key>
					<dict>
						<key>name</key>
						<string>storage.type.method.perl</string>
					</dict>
				</dict>
				<key>match</key>
				<string><![CDATA[(?x)
				\b (?:
					(sub)
				|
					# non-standard sub definitions
					(method|func|before|after|around|trigger|build|set)
				) (?!\w|:)
				#
				# sub name - copied from variable
				(?:\s+( (?:(?:::)+|[\w&&\D])\w*(?:(?:::|'[\w&&\D])\w*)* (?!\w|::) ))?
				#
				# prototype - can contain anything but brackets
				(\s* \( [^()]* \))?
				]]></string>
				<key>name</key>
				<string>meta.function.perl</string>
			</dict>
			<dict>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>entity.name.function.perl</string>
					</dict>
				</dict>
				<key>match</key>
				<string>\b(AUTOLOAD|BEGIN|CHECK|END|INIT|UNITCHECK)(?!\w|::)</string>
				<key>name</key>
				<string>meta.function.perl</string>
			</dict>
			<dict>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>keyword.operator.filehandle.perl</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>constant.language.filehandle.perl</string>
					</dict>
					<key>3</key>
					<dict>
						<key>name</key>
						<string>constant.language.filehandle.perl</string>
					</dict>
				</dict>
				<key>match</key>
				<string><![CDATA[(?x)
				\b (accept|pipe|socketpair) (?!\w|::)
				#
				# open parens or space
				(?: \s+ | \s*(?: \(\s* )+ )
				#
				(?:
					# filehandle name - copied from variable
					(?![\w&&\P{Lower}]*+[\p{Lower}]) # can't have lowercase letter
					((?:(?:::)+|[\w&&\D])\w*(?:(?:::|'[\w&&\D])\w*)*)
					(?!\w|::|\s*\()
				)
				(?!\w|::)
				#
				\s*,\s*
				# second filehandle name
				(?![\w&&\P{Lower}]*+[\p{Lower}]) # can't have lowercase letter
				((?:(?:::)+|[\w&&\D])\w*(?:(?:::|'[\w&&\D])\w*)*)
				(?!\w|::|\s*\()
				]]></string>
				<key>name</key>
				<string>meta.function.filehandle.two.perl</string>
			</dict>
			<dict>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>keyword.operator.filehandle.perl</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>constant.language.filehandle.perl</string>
					</dict>
				</dict>
				<key>match</key>
				<string><![CDATA[(?x)
				# all of these functions take a bareword as the first argument
				\b (accept|bind|binmode|chdir|close|closedir|connect|eof|fcntl|fileno|flock|formline|getc|getpeername|getsockname|getsockopt|ioctl|listen|lstat|open|opendir|pipe|print|printf|read|readdir|readline|recv|rewinddir|say|seek|seekdir|select|send|setsockopt|shutdown|socket|socketpair|stat|sysopen|sysread|sysseek|syswrite|tell|telldir|truncate|write) (?!\w|::)
				#
				(?:
					# open parens or space
					(?: \s+ | \s*(?: \(\s* )+ )
					#
					# filehandle name - copied from variable
					(?![\w&&\P{Lower}]*+[\p{Lower}]) # can't have lowercase letter
					((?:(?:::)+|[\w&&\D])\w*(?:(?:::|'[\w&&\D])\w*)*)
					(?!\w|::|\s*\()
				)?
				]]></string>
				<key>name</key>
				<string>meta.function.filehandle.perl</string>
			</dict>
			<dict>
				<key>match</key>
				<string>\b(ARGV|ARGVOUT|STDERR|STDIN|STDOUT|DATA)(?!\w|::)</string>
				<key>name</key>
				<string>constant.language.filehandle.keyword.perl</string>
			</dict>
			<dict>
				<key>match</key>
				<string>\b(abs|accept|alarm|atan2|bind|binmode|bless|chdir|chmod|chomp|chop|chown|chr|chroot|close|closedir|connect|caller|cos|crypt|dbmclose|dbmopen|defined|delete|each|endgrent|endhostent|endnetent|endprotoent|endpwent|endservent|eof|evalbytes|exec|exists|exp|fc|fcntl|fileno|flock|fork|formline|getc|getgrent|getgrgid|getgrnam|gethostbyaddr|gethostbyname|gethostent|getlogin|getnetbyaddr|getnetbyname|getnetent|getpeername|getpgrp|getppid|getpriority|getprotobyname|getprotobynumber|getprotoent|getpwent|getpwnam|getpwuid|getservbyname|getservbyport|getservent|getsockname|getsockopt|glob|gmtime|grep|hex|index|int|ioctl|join|keys|kill|lc|lcfirst|length|link|listen|localtime|lock|log|lstat|map|mkdir|msgctl|msgget|msgrcv|msgsnd|oct|open|opendir|ord|pack|pipe|pop|pos|print|printf|prototype|push|quotemeta|rand|read|readdir|readline|readlink|readpipe|recv|ref|rename|reset|reverse|rewinddir|rindex|rmdir|say|scalar|seek|seekdir|select|semctl|semget|semop|send|setgrent|sethostent|setnetent|setpgrp|setpriority|setprotoent|setpwent|setservent|setsockopt|shift|shmctl|shmget|shmread|shmwrite|shutdown|sin|sleep|socket|socketpair|sort|splice|split|sprintf|sqrt|srand|stat|study|substr|symlink|syscall|sysopen|sysread|sysseek|system|syswrite|tell|telldir|tie|tied|time|times|truncate|uc|ucfirst|umask|undef|unlink|unpack|unshift|untie|utime|values|vec|wait|waitpid|wantarray|warn|write)(?!\w|::)</string>
				<key>name</key>
				<string>keyword.operator.perl</string>
			</dict>
			<dict>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>constant.language.package.perl</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.operator.arrow.perl</string>
					</dict>
					<key>3</key>
					<dict>
						<key>name</key>
						<string>support.function.method.perl</string>
					</dict>
				</dict>
				<key>match</key>
				<string><![CDATA[(?x)
				# bareword - copied from variable
				((?<![\w:])(?:(?:::)+|[\w&&\D])\w*(?:(?:::|'[\w&&\D])\w*)*(?![\w:]) \s*)?
				#
				(->) \s*
				#
				# bareword - copied from variable
				((?:(?:::)+|[\w&&\D])\w*(?:(?:::|'[\w&&\D])\w*)*(?![\w:]))?
				]]></string>
				<key>name</key>
				<string>meta.operator.arrow.perl</string>
			</dict>
			<dict>
				<key>match</key>
				<string>(?xi)
				\b(0b[01_]+)(?!\w)
				</string>
				<key>name</key>
				<string>punctuation.definition.number.binary.perl</string>
			</dict>
			<dict>
				<key>match</key>
				<string>(?xi)
				\b(0x[\d_a-f]+)(?!\w)
				</string>
				<key>name</key>
				<string>punctuation.definition.number.hex.perl</string>
			</dict>
			<dict>
				<key>match</key>
				<string>(?xi)
				\b(0[0-7_]+)(?!\w)
				</string>
				<key>name</key>
				<string>punctuation.definition.number.octal.perl</string>
			</dict>
			<dict>
				<key>match</key>
				<string>(?xi)
				(?:
					(?:
						# start with digit
						\b (?:
							[1-9] [\d_]* \.?
							|
							# if the digit is 0 it must have a point after it otherwise its octal
							0 (?: \. | (?![\d_]) )
						)
						|
						# start with point
						\B \. \d
					)
					[\d_]*
					(?: e [+-]? [\d_]+ )?  # possible exponent
				)
				(?!\w)
				</string>
				<key>name</key>
				<string>punctuation.definition.number.float.perl</string>
			</dict>
			<dict>
				<key>match</key>
				<string>(?x)
				\b (
					v \d[\d_]+ (?:\.\d[\d_]+)*  # v with 1 or more digit groups
					|
					(?:0\b | [1-9]) (?:\.\d[\d_]+){2,} # no v with 3 or more digit groups
				)
				(?!\w)
				</string>
				<key>name</key>
				<string>string.number.version.perl</string>
			</dict>
			<dict>
				<key>match</key>
				<string>(?x)
				(?:\b\d|\B\.\d)(?:\.(?!\.)|\w+)*
				</string>
				<key>name</key>
				<string>invalid.illegal.number.perl</string>
			</dict>
			<dict>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>keyword.operator.filetest.perl</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>constant.language.filehandle.perl</string>
					</dict>
				</dict>
				<key>match</key>
				<string><![CDATA[(?x)
				(?<!\w) (-[rwxoRWXOezsfdlpSbctugkTBMAC]) (?!\w|::)
				#
				(?:
					# open parens or space
					(?: \s+ | \s*(?: \(\s* )+ )
					#
					# filehandle name - copied from variable
					(?![\w&&\P{Lower}]*+[\p{Lower}]) # can't have lowercase letter
					((?:(?:::)+|[\w&&\D])\w*(?:(?:::|'[\w&&\D])\w*)*)
					(?!\w|::|\s*\()
				)?
				]]></string>
				<key>name</key>
				<string>meta.operator.filetest.perl</string>
			</dict>
			<dict>
				<key>match</key>
				<string>(?&lt;!\w)-[\w&amp;&amp;\D]\w*(?!\w|::)</string>
				<key>name</key>
				<string>constant.language.string.perl</string>
			</dict>
			<dict>
				<key>match</key>
				<string><![CDATA[\b([\w&&\D&&\P{Lower}][\w&&\P{Lower}]*):(?!:)]]></string>
				<key>name</key>
				<string>constant.language.label.perl</string>
			</dict>
			<dict>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>support.function.control.perl</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>constant.language.package.perl</string>
					</dict>
				</dict>
				<key>match</key>
				<string><![CDATA[(?x)
				\b (
					# any name
					(?:(?:::)+|[\w&&\D])\w*(?:(?:::|'[\w&&\D])\w*)*
					(?!\w|::)
				)
				\s+
				# not a version number
				(?!(?:v\d+(?>\.\d+)*)(?!\w|::))
				#
				# followed by filehandle - copied from variable
				(?=[\w:'&&\P{Lower}]*+[\p{Lower}]) # must have a lowercase letter
				(?=[\w:'&&\P{Upper}]*+[\p{Upper}]) # must have an uppercase letter
				((?:(?:::)+|[\w&&\D])\w*(?:(?:::|'[\w&&\D])\w*)*)
				(?!\w|::|\()
				]]></string>
				<key>name</key>
				<string>meta.class.perl</string>
			</dict>
			<dict>
				<key>match</key>
				<string><![CDATA[(?<!\w|::)((?:(?:::)+|[\w&&\D])\w*(?:(?:::|'[\w&&\D])\w*)*)(?!\w|::)]]></string>
				<key>name</key>
				<string>support.function.bareword.perl</string>
			</dict>
		</array>
		<key>repository</key>
		<dict>
			<key>ampersand_sub</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>match</key>
						<string>&amp;&amp;</string>
						<key>name</key>
						<string>punctuation.definition.operator.boolean.and</string>
					</dict>
					<dict>
						<key>match</key>
						<string>(?x)
						[&amp;]
						(
							[^{\w\s] (?!\w|::)
						|
							# same thing but with braces
							\{ \s*
							[^{\w\s]
							\}
						)
						</string>
						<key>name</key>
						<string>support.function.ampersand.punctuation</string>
					</dict>
					<dict>
						<key>match</key>
						<string>(?x)
						[&amp;]
						(?:
							(?: ::)* \d+ (?!\w|::)
						|
							# same thing but with braces
							\{ \s*
							(?: ::)* \d+
							\s* \}
						)
						</string>
						<key>name</key>
						<string>support.function.ampersand.digits</string>
					</dict>
					<dict>
						<key>match</key>
						<string><![CDATA[(?x)
						[&]
						(?:
							\^[\w&&\D&&\P{Lower}] \b
						|
							\{
							\^[\w&&\D&&\P{Lower}]\w*
							\}
						)
						]]></string>
						<key>name</key>
						<string>support.function.ampersand.caret</string>
					</dict>
					<dict>
						<key>match</key>
						<string><![CDATA[(?x)
						[&]
						(?:
							(?:
								(?: ::)+
							|
								[\w&&\D]
							) \w*
							(?:
								(?:
									::
								|
									'[\w&&\D]
								) \w*
							)*
							(?!\w|::)
						|
							# same thing but with braces
							\{ \s*
							(?:
								(?: ::)+
							|
								[\w&&\D]
							) \w*
							(?:
								(?:
									::
								|
									'[\w&&\D]
								) \w*
							)*
							\s* \}
						)
						]]></string>
						<key>name</key>
						<string>support.function.ampersand.normal</string>
					</dict>
				</array>
			</dict>
			<key>escaped_char</key>
			<dict>
				<key>match</key>
				<string>\\.</string>
				<key>name</key>
				<string>string.character.escape.perl</string>
			</dict>
			<key>line_comment</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>captures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>comment.line.number-sign.perl</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.comment.perl</string>
							</dict>
						</dict>
						<key>match</key>
						<string>^((#).*$\n?)</string>
						<key>name</key>
						<string>meta.comment.full-line.perl</string>
					</dict>
					<dict>
						<key>captures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.comment.perl</string>
							</dict>
						</dict>
						<key>match</key>
						<string>(#).*$\n?</string>
						<key>name</key>
						<string>comment.line.number-sign.perl</string>
					</dict>
				</array>
			</dict>
			<key>nested_braces</key>
			<dict>
				<key>begin</key>
				<string>\{</string>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>punctuation.section.scope.perl</string>
					</dict>
				</dict>
				<key>end</key>
				<string>\}</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#escaped_char</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#nested_braces</string>
					</dict>
				</array>
			</dict>
			<key>nested_braces_interpolated</key>
			<dict>
				<key>begin</key>
				<string>\{</string>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>punctuation.section.scope.perl</string>
					</dict>
				</dict>
				<key>end</key>
				<string>\}</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#escaped_char</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#variable</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#nested_braces_interpolated</string>
					</dict>
				</array>
			</dict>
			<key>nested_brackets</key>
			<dict>
				<key>begin</key>
				<string>\[</string>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>punctuation.section.scope.perl</string>
					</dict>
				</dict>
				<key>end</key>
				<string>]</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#escaped_char</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#nested_brackets</string>
					</dict>
				</array>
			</dict>
			<key>nested_brackets_interpolated</key>
			<dict>
				<key>begin</key>
				<string>\[</string>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>punctuation.section.scope.perl</string>
					</dict>
				</dict>
				<key>end</key>
				<string>]</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#escaped_char</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#variable</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#nested_brackets_interpolated</string>
					</dict>
				</array>
			</dict>
			<key>nested_ltgt</key>
			<dict>
				<key>begin</key>
				<string>&lt;</string>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>punctuation.section.scope.perl</string>
					</dict>
				</dict>
				<key>end</key>
				<string>&gt;</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#nested_ltgt</string>
					</dict>
				</array>
			</dict>
			<key>nested_ltgt_interpolated</key>
			<dict>
				<key>begin</key>
				<string>&lt;</string>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>punctuation.section.scope.perl</string>
					</dict>
				</dict>
				<key>end</key>
				<string>&gt;</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#variable</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#nested_ltgt_interpolated</string>
					</dict>
				</array>
			</dict>
			<key>nested_parens</key>
			<dict>
				<key>begin</key>
				<string>\(</string>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>punctuation.section.scope.perl</string>
					</dict>
				</dict>
				<key>end</key>
				<string>\)</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#escaped_char</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#nested_parens</string>
					</dict>
				</array>
			</dict>
			<key>nested_parens_interpolated</key>
			<dict>
				<key>begin</key>
				<string>\(</string>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>punctuation.section.scope.perl</string>
					</dict>
				</dict>
				<key>end</key>
				<string>\)</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>comment</key>
						<string>This is to prevent thinks like qr/foo$/ to treat $/ as a variable</string>
						<key>match</key>
						<string>\$(?=[^\s\w\'\{\[\(\&lt;])</string>
						<key>name</key>
						<string>keyword.control.anchor.perl</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#escaped_char</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#variable</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#nested_parens_interpolated</string>
					</dict>
				</array>
			</dict>
			<key>other_sigil</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>match</key>
						<string>(?x)
						[%*]
						(
							[^{\w\s] (?!\w|::)
						|
							# same thing but with braces
							\{ \s*
							[^{\w\s]
							\}
						)
						</string>
						<key>name</key>
						<string>support.other.sigil.punctuation</string>
					</dict>
					<dict>
						<key>match</key>
						<string>(?x)
						[%*]
						(?:
							(?: ::)* \d+ (?!\w|::)
						|
							# same thing but with braces
							\{ \s*
							(?: ::)* \d+
							\s* \}
						)
						</string>
						<key>name</key>
						<string>support.other.sigil.digits</string>
					</dict>
					<dict>
						<key>match</key>
						<string><![CDATA[(?x)
						[%*]
						(?:
							\^[\w&&\D&&\P{Lower}] \b
						|
							\{
							\^[\w&&\D&&\P{Lower}]\w*
							\}
						)
						]]></string>
						<key>name</key>
						<string>support.other.sigil.caret</string>
					</dict>
					<dict>
						<key>match</key>
						<string><![CDATA[(?x)
						[%*]
						(?:
							(?:
								(?: ::)+
							|
								[\w&&\D]
							) \w*
							(?:
								(?:
									::
								|
									'[\w&&\D]
								) \w*
							)*
							(?!\w|::)
						|
							# same thing but with braces
							\{ \s*
							(?:
								(?: ::)+
							|
								[\w&&\D]
							) \w*
							(?:
								(?:
									::
								|
									'[\w&&\D]
								) \w*
							)*
							\s* \}
						)
						]]></string>
						<key>name</key>
						<string>support.other.sigil.normal</string>
					</dict>
				</array>
			</dict>
			<key>pod</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>begin</key>
						<string>^(=)(?=\w)(?!cut\b)</string>
						<key>captures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.comment.perl</string>
							</dict>
						</dict>
						<key>end</key>
						<string>^(=cut)\b</string>
						<key>name</key>
						<string>comment.block.documentation.pod</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>match</key>
								<string>\t+</string>
								<key>name</key>
								<string>invalid.pod.tab</string>
							</dict>
						</array>
					</dict>
				</array>
			</dict>
			<key>regex_quantifier_curly</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>match</key>
						<string><![CDATA[(?x)
						{(?:
							\d+,
							|
							(?>0*(?=\d)) # skip 0s
							(?<balanced_digits>
								\d
								(?:
									\g<balanced_digits>
									|             # can't get any more balanced digits so we're innermost
									, (?![^,]*+,) # only 1 comma is allowed
									(?>0*(?=\d))  # skip 0s after comma
								)?+
								\d
							)
							\d+
						)}
						]]></string>
						<key>name</key>
						<string>string.quoted.double.perl</string>
					</dict>
					<dict>
						<key>begin</key>
						<string>(?x)
						(?=
							{
							(?&gt;0*(?=\d))(\d) , (?&gt;0*(?=\d))\d{1}
							}
						)
						</string>
						<key>end</key>
						<string>(?x)
						({
						\d*+ , (?&gt;0*(?=\d))
						(?:[^0-\1]|\1 )
						\d*
						}) | ({\d*,\d*})
						</string>
						<key>endCaptures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>string.quoted.double.perl</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>constant.language.nope</string>
							</dict>
						</dict>
					</dict>
					<dict>
						<key>begin</key>
						<string>(?x)
						(?=
							{
							(?&gt;0*(?=\d))(\d)(\d) , (?&gt;0*(?=\d))\d{2}
							}
						)
						</string>
						<key>end</key>
						<string>(?x)
						({
						\d*+ , (?&gt;0*(?=\d))
						(?:[^0-\1]|\1 (?:[^0-\2]|\2 ))
						\d*
						}) | ({\d*,\d*})
						</string>
						<key>endCaptures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>string.quoted.double.perl</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>constant.language.nope</string>
							</dict>
						</dict>
					</dict>
					<dict>
						<key>begin</key>
						<string>(?x)
						(?=
							{
							(?&gt;0*(?=\d))(\d)(\d)(\d) , (?&gt;0*(?=\d))\d{3}
							}
						)
						</string>
						<key>end</key>
						<string>(?x)
						({
						\d*+ , (?&gt;0*(?=\d))
						(?:[^0-\1]|\1 (?:[^0-\2]|\2 (?:[^0-\3]|\3 )))
						\d*
						}) | ({\d*,\d*})
						</string>
						<key>endCaptures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>string.quoted.double.perl</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>constant.language.nope</string>
							</dict>
						</dict>
					</dict>
					<dict>
						<key>begin</key>
						<string>(?x)
						(?=
							{
							(?&gt;0*(?=\d))(\d)(\d)(\d)(\d) , (?&gt;0*(?=\d))\d{4}
							}
						)
						</string>
						<key>end</key>
						<string>(?x)
						({
						\d*+ , (?&gt;0*(?=\d))
						(?:[^0-\1]|\1 (?:[^0-\2]|\2 (?:[^0-\3]|\3 (?:[^0-\4]|\4 ))))
						\d*
						}) | ({\d*,\d*})
						</string>
						<key>endCaptures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>string.quoted.double.perl</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>constant.language.nope</string>
							</dict>
						</dict>
					</dict>
					<dict>
						<key>begin</key>
						<string>(?x)
						(?=
							{
							(?&gt;0*(?=\d))(\d)(\d)(\d)(\d)(\d) , (?&gt;0*(?=\d))\d{5}
							}
						)
						</string>
						<key>end</key>
						<string>(?x)
						({
						\d*+ , (?&gt;0*(?=\d))
						(?:[^0-\1]|\1 (?:[^0-\2]|\2 (?:[^0-\3]|\3 (?:[^0-\4]|\4 (?:[^0-\5]|\5 )))))
						\d*
						}) | ({\d*,\d*})
						</string>
						<key>endCaptures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>string.quoted.double.perl</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>constant.language.nope</string>
							</dict>
						</dict>
					</dict>
					<dict>
						<key>begin</key>
						<string>(?x)
						(?=
							{
							(?&gt;0*(?=\d))(\d)(\d)(\d)(\d)(\d)(\d) , (?&gt;0*(?=\d))\d{6}
							}
						)
						</string>
						<key>end</key>
						<string>(?x)
						({
						\d*+ , (?&gt;0*(?=\d))
						(?:[^0-\1]|\1 (?:[^0-\2]|\2 (?:[^0-\3]|\3 (?:[^0-\4]|\4 (?:[^0-\5]|\5 (?:[^0-\6]|\6 ))))))
						\d*
						}) | ({\d*,\d*})
						</string>
						<key>endCaptures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>string.quoted.double.perl</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>constant.language.nope</string>
							</dict>
						</dict>
					</dict>
					<dict>
						<key>begin</key>
						<string>(?x)
						(?=
							{
							(?&gt;0*(?=\d))(\d)(\d)(\d)(\d)(\d)(\d)(\d) , (?&gt;0*(?=\d))\d{7}
							}
						)
						</string>
						<key>end</key>
						<string>(?x)
						({
						\d*+ , (?&gt;0*(?=\d))
						(?:[^0-\1]|\1 (?:[^0-\2]|\2 (?:[^0-\3]|\3 (?:[^0-\4]|\4 (?:[^0-\5]|\5 (?:[^0-\6]|\6 (?:[^0-\7]|\7 )))))))
						\d*
						}) | ({\d*,\d*})
						</string>
						<key>endCaptures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>string.quoted.double.perl</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>constant.language.nope</string>
							</dict>
						</dict>
					</dict>
					<dict>
						<key>begin</key>
						<string>(?x)
						(?=
							{
							(?&gt;0*(?=\d))(\d)(\d)(\d)(\d)(\d)(\d)(\d)(\d) , (?&gt;0*(?=\d))\d{8}
							}
						)
						</string>
						<key>end</key>
						<string>(?x)
						({
						\d*+ , (?&gt;0*(?=\d))
						(?:[^0-\1]|\1 (?:[^0-\2]|\2 (?:[^0-\3]|\3 (?:[^0-\4]|\4 (?:[^0-\5]|\5 (?:[^0-\6]|\6 (?:[^0-\7]|\7 (?:[^0-\8]|\8 ))))))))
						\d*
						}) | ({\d*,\d*})
						</string>
						<key>endCaptures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>string.quoted.double.perl</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>constant.language.nope</string>
							</dict>
						</dict>
					</dict>
					<dict>
						<key>begin</key>
						<string>(?x)
						(?=
							{
							(?&gt;0*(?=\d))(\d)(\d)(\d)(\d)(\d)(\d)(\d)(\d)(\d) , (?&gt;0*(?=\d))\d{9}
							}
						)
						</string>
						<key>end</key>
						<string>(?x)
						({
						\d*+ , (?&gt;0*(?=\d))
						(?:[^0-\1]|\1 (?:[^0-\2]|\2 (?:[^0-\3]|\3 (?:[^0-\4]|\4 (?:[^0-\5]|\5 (?:[^0-\6]|\6 (?:[^0-\7]|\7 (?:[^0-\8]|\8 (?:[^0-\9]|\9 )))))))))
						\d*
						}) | ({\d*,\d*})
						</string>
						<key>endCaptures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>string.quoted.double.perl</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>constant.language.nope</string>
							</dict>
						</dict>
					</dict>
					<dict>
						<key>begin</key>
						<string>(?x)
						(?=
							{
							(?&gt;0*(?=\d))(\d)(\d)(\d)(\d)(\d)(\d)(\d)(\d)(\d)(\d) , (?&gt;0*(?=\d))\d{10}
							}
						)
						</string>
						<key>end</key>
						<string>(?x)
						({
						\d*+ , (?&gt;0*(?=\d))
						(?:[^0-\1]|\1 (?:[^0-\2]|\2 (?:[^0-\3]|\3 (?:[^0-\4]|\4 (?:[^0-\5]|\5 (?:[^0-\6]|\6 (?:[^0-\7]|\7 (?:[^0-\8]|\8 (?:[^0-\9]|\9 (?:[^0-\10]|\10 ))))))))))
						\d*
						}) | ({\d*,\d*})
						</string>
						<key>endCaptures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>string.quoted.double.perl</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>constant.language.nope</string>
							</dict>
						</dict>
					</dict>
				</array>
			</dict>
			<key>variable</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>match</key>
						<string>(?x)
						[@$] \s*
						(
							[^{\w\s] (?!\w|::)
						|
							# same thing but with braces
							\{ \s*
							[^{\w\s]
							\}
						)
						</string>
						<key>name</key>
						<string>support.other.variable.perl.punctuation</string>
					</dict>
					<dict>
						<key>match</key>
						<string>(?x)
						[@$] \s*
						(?:
							(?: ::)* \d+ (?!\w|::)
						|
							# same thing but with braces
							\{ \s*
							(?: ::)* \d+
							\s* \}
						)
						</string>
						<key>name</key>
						<string>support.other.variable.perl.digits</string>
					</dict>
					<dict>
						<key>match</key>
						<string><![CDATA[(?x)
						[@$] \s*
						(?:
							\^[\w&&\D&&\P{Lower}] \b
						|
							\{
							\^[\w&&\D&&\P{Lower}]\w*
							\}
						)
						]]></string>
						<key>name</key>
						<string>support.other.variable.perl.caret</string>
					</dict>
					<dict>
						<key>match</key>
						<string><![CDATA[(?x)
						(?: [@$] \s* | \$\# )
						(?:
							(?:
								(?: ::)+
							|
								[\w&&\D]
							) \w*
							(?:
								(?:
									::
								|
									'[\w&&\D]
								) \w*
							)*
							(?!\w|::)
						|
							# same thing but with braces
							\{ \s*
							(?:
								(?: ::)+
							|
								[\w&&\D]
							) \w*
							(?:
								(?:
									::
								|
									'[\w&&\D]
								) \w*
							)*
							\s* \}
						)
						]]></string>
						<key>name</key>
						<string>support.other.variable.perl.normal</string>
					</dict>
				</array>
			</dict>
		</dict>
		<key>scopeName</key>
		<string>source.perl</string>
		<key>uuid</key>
		<string>2c338cc8-a464-4ee4-a56c-d524947fa6f9</string>
	</dict>
</plist>
